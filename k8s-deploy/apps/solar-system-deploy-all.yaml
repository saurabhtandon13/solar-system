apiVersion: v1
kind: Namespace
metadata:
  name: solar-system
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: solar-system-selfsigned-issuer
  namespace: solar-system
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: solar-system-selfsigned-cert
  namespace: solar-system
spec:
  isCA: true
  commonName: solarsystem.vrack.vpshere.local
  secretName: solar-system-cert-tls
  dnsNames:
    - solarsystem.vrack.vpshere.local
  duration: 8760h
  renewBefore: 240h
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: solar-system-selfsigned-issuer
    kind: Issuer
    group: cert-manager.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: solar-system
  name: solar-system
  namespace: solar-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: solar-system
  strategy: {}
  template:
    metadata:
      labels:
        app: solar-system
    spec:
      containers:
      - image: harbor-registry.vrack.vsphere.local/solar-system/solar-system:v9
        name: solar-system
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: solar-system
  labels:
    app: solar-system
  name: solar-system-service
spec:
  ports:
  - port: 80 #change to 80
    protocol: TCP
    targetPort: 80 #change to 80
  selector:
    app: solar-system
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: solar-system-ingress
  namespace: solar-system
  labels:
    app: solar-system
spec:
  ingressClassName: contour
  tls:
  - hosts:
      - solarsystem.vrack.vsphere.local
    secretName: solar-system-cert-tls
  rules:
    - host: solarsystem.vrack.vsphere.local
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: solar-system-service
              port:
                number: 80
